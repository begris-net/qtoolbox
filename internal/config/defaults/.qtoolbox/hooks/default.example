#!/usr/bin/env bash

# qtoolbox hook script example to integrate Cygwin sdks with Windows environment
# use `export QTOOLBOX_HOOK_DEBUG=true` to enable debug messages

function call() {
    local candidate="$1"
    local version="$2"

    if [[ $QTOOLBOX_HOOK_DEBUG ]]; then
      echo "[DEBUG] QTOOLBOX_DIR: $QTOOLBOX_DIR"
      echo "[DEBUG] candidate: $candidate"
      echo "[DEBUG] version: $version"
    fi

    updateDefault $QTOOLBOX_CANDIDATES_DIR $candidate
}

function updateDefault() {
    local candidates_dir="$1"
    local candidate="$2"
    local candidates="$candidates_dir/$candidate"

    echo "Update default candidate for $candidate"

    local current_candidate=$(find $candidates -mindepth 0 -maxdepth 1 -name current)
    local CURRENT_SDK=$(cygpath -aw $current_candidate)
    local CURRENT_WIN_SDK=$(dirname $current_candidate)/_CURRENT
    local WIN_SDK=$(cygpath -aw $(dirname $current_candidate))\\_CURRENT

    if [[ -d $current_candidate ]]; then
        if [[ -L $CURRENT_WIN_SDK ]]; then
            rm $CURRENT_WIN_SDK
        fi
        powershell Start-Process cmd -Verb RunAs -ArgumentList \"/c mklink /D $WIN_SDK $CURRENT_SDK\"
    elif [[ -L $CURRENT_WIN_SDK ]]; then
        rm $CURRENT_WIN_SDK
    fi
}

call "$@"
